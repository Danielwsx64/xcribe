FORMAT: 1A
HOST: http://my-api.com

# Basic API
The description of the API

## Group Users
## Users [/users]
### Users delete [DELETE /users/{id}]
+ Parameters

    + id: `1` (string)

+ Request delete user (application/json)
    + Headers

            authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIn0.rTCH8cLoGxAm_xw68z-zXVKi9ie6xJn9tnVWjd_9ftE

+ Response 204 (text/plain)
    + Headers

            cache-control: max-age=0, private, must-revalidate

### Users index [GET /users]
+ Request show users (application/json)
    + Headers

            authorization: Basic dXNlcm5hbWU6cGFzcw==

+ Response 200 (application/json)
    + Headers

            cache-control: max-age=0, private, must-revalidate

    + Body

            [
              {
                "id": 1,
                "name": "user 1"
              },
              {
                "id": 2,
                "name": "user 2"
              }
            ]

    + Schema

            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "format": "int32",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "user 1"
                  }
                }
              }
            }

### Users show [GET /users/{id}]
+ Parameters

    + id: `1` (string)

+ Request show user info (application/json)
    + Headers

            authorization: Basic dXNlcm5hbWU6cGFzcw==

+ Response 200 (application/json)
    + Headers

            cache-control: max-age=0, private, must-revalidate

    + Body

            {
              "id": 1,
              "name": "user 1"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "format": "int32",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "user 1"
                }
              }
            }

### Users create [POST /users]
+ Request create user (application/json)
    + Headers

            authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIn0.rTCH8cLoGxAm_xw68z-zXVKi9ie6xJn9tnVWjd_9ftE

    + Body

            {
              "age": 5,
              "name": "user 1"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "age": {
                  "type": "number",
                  "format": "int32",
                  "example": 5
                },
                "name": {
                  "type": "string",
                  "example": "user 1"
                }
              }
            }

+ Response 201 (application/json)
    + Headers

            cache-control: max-age=0, private, must-revalidate

    + Body

            {
              "age": 5,
              "name": "user 1"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "age": {
                  "type": "number",
                  "format": "int32",
                  "example": 5
                },
                "name": {
                  "type": "string",
                  "example": "user 1"
                }
              }
            }

### Users update [PUT /users/{id}]
+ Parameters

    + id: `1` (string)

+ Request update user (application/json)
    + Headers

            authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIn0.rTCH8cLoGxAm_xw68z-zXVKi9ie6xJn9tnVWjd_9ftE

    + Body

            {
              "age": 5,
              "name": "user 1"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "age": {
                  "type": "number",
                  "format": "int32",
                  "example": 5
                },
                "name": {
                  "type": "string",
                  "example": "user 1"
                }
              }
            }

+ Response 200 (application/json)
    + Headers

            cache-control: max-age=0, private, must-revalidate

    + Body

            {
              "age": 5,
              "name": "user 1"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "age": {
                  "type": "number",
                  "format": "int32",
                  "example": 5
                },
                "name": {
                  "type": "string",
                  "example": "user 1"
                }
              }
            }

## Users [/users/{usersId}/cancel]
+ Parameters

    + usersId: `1` (string)

### Users cancel [POST /users/{usersId}/cancel]
+ Parameters

    + usersId: `1` (string)

+ Request custom action with user (application/json)
    + Headers

            authorization: BE28C1C33B979E6650F67E7800DC0662

+ Response 204 (text/plain)
    + Headers

            cache-control: max-age=0, private, must-revalidate

## Group Users Posts
## Users Posts [/users/{usersId}/posts]
+ Parameters

    + usersId: `1` (string)

### Users Posts index [GET /users/{usersId}/posts]
+ Parameters

    + usersId: `1` (string)

+ Request show all user posts (application/json)
    + Headers

            authorization: BE28C1C33B979E6650F67E7800DC0662

+ Response 200 (application/json)
    + Headers

            cache-control: max-age=0, private, must-revalidate

    + Body

            [
              {
                "id": 1,
                "title": "user 1"
              },
              {
                "id": 2,
                "title": "user 2"
              }
            ]

    + Schema

            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "format": "int32",
                    "example": 1
                  },
                  "title": {
                    "type": "string",
                    "example": "user 1"
                  }
                }
              }
            }

### Users Posts update [PATCH /users/{usersId}/posts/{id}]
+ Parameters

    + id: `2` (string)
    + usersId: `1` (string)

+ Request update user post (application/json)
    + Headers

            authorization: BE28C1C33B979E6650F67E7800DC0662

    + Body

            {
              "title": "user 1"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "user 1"
                }
              }
            }

+ Response 200 (application/json)
    + Headers

            cache-control: max-age=0, private, must-revalidate

    + Body

            {
              "title": "user 1",
              "users_id": "1"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "user 1"
                },
                "users_id": {
                  "type": "string",
                  "example": "1"
                }
              }
            }

### Users Posts create [POST /users/{usersId}/posts]
+ Parameters

    + usersId: `1` (string)

+ Request show user post (application/json)
    + Headers

            authorization: BE28C1C33B979E6650F67E7800DC0662

    + Body

            {
              "title": "user 1"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "user 1"
                }
              }
            }

+ Response 201 (application/json)
    + Headers

            cache-control: max-age=0, private, must-revalidate

    + Body

            {
              "title": "user 1",
              "users_id": "1"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "user 1"
                },
                "users_id": {
                  "type": "string",
                  "example": "1"
                }
              }
            }

