name: CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'
jobs:
  mix_format:
    name: mix format (Elixir 1.12.1 OTP 24.0.1)
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v1
      - uses: erlef/setup-beam@v1
        with:
          otp-version: "24.0.1"
          elixir-version: "1.12.1"
      - name: Install Dependencies
        run: mix deps.get
      - name: Run Formatter
        run: mix format --check-formatted
  mix_credo:
    name: mix credo (Elixir 1.12.1 OTP 24.0.1)
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v1
      - uses: erlef/setup-beam@v1
        with:
          otp-version: "24.0.1"
          elixir-version: "1.12.1"
      - name: Install Dependencies
        run: mix deps.get
      - name: Run Credo
        run: mix credo
  mix_test:
    name: mix test (Elixir ${{ matrix.elixir }} OTP ${{ matrix.otp }})
    strategy:
      matrix:
        elixir: ["1.8.2", "1.9.1", "1.10.2", "1.12.1"]
        include:
          - elixir: "1.8.2"
            otp: "21.3.8"
          - elixir: "1.9.1"
            otp: "22.1.8"
          - elixir: "1.10.2"
            otp: "22.3"
          - elixir: "1.12.1"
            otp: "24.0.1"
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v1
      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}
      - name: Install Dependencies
        run: mix deps.get
      - name: Run Tests
        run: mix test
  coverage:
    name: Check coverage
    runs-on: ubuntu-16.04
    needs: [mix_format, mix_credo, mix_test]
    steps:
      - uses: actions/checkout@v1
      - uses: erlef/setup-beam@v1
        with:
          otp-version: "24.0.1"
          elixir-version: "1.12.1"
      - name: Install Dependencies
        run: mix deps.get
      - name: Run Mix Coverage
        run: mix coveralls.json
        env:
          MIX_ENV: test
      - name: Run codecov script
        run: bash <(curl -s https://codecov.io/bash)
  mix_check_version:
    name: Check version (Elixir 1.12.1 OTP 24.0.1)
    runs-on: ubuntu-16.04
    needs: [mix_format, mix_credo, mix_test]
    if: github.ref != 'refs/heads/master' && github.event_name == 'pull_request' && github.base_ref == 'master'
    steps:
      - uses: actions/checkout@v1
      - uses: erlef/setup-beam@v1
        with:
          otp-version: "24.0.1"
          elixir-version: "1.12.1"
      - name: Install Dependencies
        run: mix deps.get
      - name: Check version
        env:
          HEX_API_KEY: ${{ secrets.HEX_API_KEY }}
        run: mix run bin/check_version.exs
  mix_publish:
    name: Publish (Elixir 1.12.1 OTP 24.0.1)
    runs-on: ubuntu-16.04
    needs: [mix_format, mix_credo, mix_test]
    outputs:
      version: ${{ steps.output_version.outputs.version }}
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v1
      - uses: erlef/setup-beam@v1
        with:
          otp-version: "24.0.1"
          elixir-version: "1.12.1"
      - name: Install Dependencies
        run: mix do deps.get, deps.compile, compile
      - name: Publish
        env:
          HEX_API_KEY: ${{ secrets.HEX_API_KEY }}
        run: mix hex.publish --yes
      - name: Output version
        run: echo "::set-output name=version::v$(mix run -e 'IO.puts(Application.spec(:xcribe, :vsn))')"
        id: output_version
  github_release:
    name: Create release
    runs-on: ubuntu-16.04
    needs: [mix_publish]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.mix_publish.outputs.version }}
          release_name: Release ${{ needs.mix_publish.outputs.version }}
          body: Checkout the [changelog](https://github.com/Finbits/xcribe/blob/master/CHANGELOG.md)
          draft: false
          prerelease: false
